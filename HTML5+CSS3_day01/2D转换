-----------------------------------------------------------------------
2D转换之translate

1. 2D转换
   2D转换是改变标签在二维平面上的位置和形状
   - 移动：translate
   - 旋转：rotate
   - 缩放：scale

2. translate语法
   - x 就是 x 轴上水平移动
   - y 就是 y 轴上水平移动
   transform: translate(x, y)
   transform: translateX(n)
   transfrom: translateY(n)
   
3. 重点知识点
   - 2D的移动主要是指 水平、垂直方向上的移动
   - translate最大的优点就是不影响其他元素的位置
   - translate中的100%单位，是相对于本身的宽度和高度来进行计算的
   - 行内标签没有效果

-----------------------------------------------------------------------
 2D 转换 rotate

1. rotate 旋转
   - 2D旋转指的是让元素在二维平面内顺时针或者逆时针旋转

2. rotate 语法
   /* 单位是：deg */
   transform: rotate(度数) 

3. 重点知识点
   - rotate里面跟度数，单位是 deg
   - 角度为正时，顺时针，角度为负时，逆时针
   - 默认旋转的中心点是元素的中心点

4. 代码演示
   img:hover {
     transform: rotate(360deg)
   }
------------------------------------------------------------------------
2D转换中心点transform-origin

1.语法
    /* 设置旋转中心点*/
    中间用空格隔开！！！！！！！！！！
    transform-origin: x y;
2.重点
    注意后面的参数 x 和 y 是用空格隔开
    x y 默认转换的中心点是元素的中心点（50% 50%）
    还可以给 x y 设置 像素 或者 方位名词 （top bottom left right center）  
-------------------------------------------------------------------------
2D 转换之缩放scale
   缩放，顾名思义，可以放大和缩小。 只要给元素添加上了这个属性就能控制它放大还是缩小。
    
1. 语法
    transform:scale(x,y);
    
2. 总结
   - transform:scale(1,1); 宽和高都放大一倍，相对于没有放大
   - transform:scale(2,2); 宽和高都放大了2倍  transform:scale(2) ：只写一个参数，第二个参数则和第一个参数一样，相当于 scale(2,2)
   - transform:scale(0.5,0.5); 缩小   
   - transform: scale(2);  等比例缩放 同时修改高度和宽度 宽度变成了两倍 高度默认和第一个一样

3.scale最大的优势：        
   可以设置转换中心点缩放   transform-origin: left bottom;
   默认以中心点缩放，而且不影响其他盒子

-------------------------------------------------------------------------
2D`转换综合写法以及顺序问题

1. 知识要点
   - 同时使用多个转换，其格式为 transform: translate() rotate() scale();  用空格隔开即可。
   - 顺序会影响到转换的效果(先旋转会改变坐标轴方向)
   - 但我们同时有位置或者其他属性的时候，要将位移放到最前面